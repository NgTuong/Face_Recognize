* Cấu trúc:
+ align: thư mục dùng để chuẩn bị dữ liệu
	|--- train_img:	thư mục dùng để chứa ảnh người mình muốn nhận dạng
	|--- pre_img:		thư mục sau khi dùng mtcnn để để căn chỉnh và cắt mặt
	|--- det1.npy, det2.npy, det3.npy: các file chứa trọng số của mtcnn
	|--- detect_face:	file chính của mtcnn (cấu trúc mạng, xử lý)
	|--- initializer.py:	file dùng cắt mặt sau đó mặt được cắt sẽ cho vào file 'pre_img'

+ 201804002-1147759.pb: file pre-trained model của mạng inception-resnet v1

+ classifier.py: file dùng để phân loại các mặt của cùng 1 người sử dụng SVM

+ facenet.py: mục đích load model inception_resnet v1, load dữ liệu

+ predict.py: file dùng để dự nhận diện mặt người

* Hướng dẫn:
+ Ban đầu tạo dữ liệu bằng cách sử mtcnn để cắt ảnh:
	- Vào mục align/train_img tạo các file có tên giống với tên người mà mình muốn nhận diện, mỗi thư mục của người đó chứa tầm 10-20 ảnh ở nhiều góc độ khác nhau.
	- Chạy file initializer.py bằng cách bật cửa sổ cmd chuyển đường dẫn đến file hiện tại, sau đó gõ lệnh 'python initializer'. Sau khi chạy xong ta thu được các khuôn mặt đã được cắt trong thư mục align/pre_img.
+ Để từ mặt người ta thu được các embedding vector dùng để phân loại:
	- Chạy file classifier.py bằng cách bật cửa sổ cmd chuyển đường dẫn đến file hiện tại sao đó gõ "python classifier.py TRAIN pre_img 201804002-1147759.pb classifier.pkl".
	- Ta sẽ thu được file classifier.pkl chứa trọng số đã được phân loại các embedding vector
+ Để nhận dạng 1 người bất kỳ trong ảnh 
	- Bỏ ảnh đó vào thu mục cùng file với predict.py
	- Bật cửa số cmd chuyển đường dẫn đến file hiện tại, sau đó gõ "python predict.py ten_anh_muon_nhan_dien 201804002-1147759.pb classifier.pkl"

* Chú ý: 
	+ Muốn gõ nhanh cách từ trong câu lệnh cmd ta chỉ cần ghi 2-3 chữ cái đầu r bấm tab
	Ví dụ : Chạy file predict.py "python pre+tab 1.jpg 2018+tb class+tab"